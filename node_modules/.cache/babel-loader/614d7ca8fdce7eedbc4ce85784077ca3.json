{"ast":null,"code":"import _classCallCheck from \"/home/turiya/Google Drive/Coding/Northcoders 12-Week Course/nc-news/nc-news-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/turiya/Google Drive/Coding/Northcoders 12-Week Course/nc-news/nc-news-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/turiya/Google Drive/Coding/Northcoders 12-Week Course/nc-news/nc-news-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/turiya/Google Drive/Coding/Northcoders 12-Week Course/nc-news/nc-news-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/turiya/Google Drive/Coding/Northcoders 12-Week Course/nc-news/nc-news-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/turiya/Google Drive/Coding/Northcoders 12-Week Course/nc-news/nc-news-frontend/src/components/CommentAdd.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../api';\n\nvar CommentAdd =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentAdd, _Component);\n\n  function CommentAdd() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentAdd);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentAdd)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      body: ''\n    };\n\n    _this.handleBodyChange = function (event) {\n      var body = event.target.value;\n      return _this.setState({\n        body: body\n      });\n    };\n\n    _this.handlePost = function () {\n      var article_id = _this.props.article_id;\n      var body = _this.state.body;\n      var created_by = _this.props.loggedInUser._id;\n      api.addComment(article_id, body, created_by).then(function (newComment) {\n        return _this.props.handleAddComment(newComment);\n      });\n\n      _this.setState({\n        body: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentAdd, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"comment_add_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"comment_add_form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"comment_body_input\",\n        placeholder: this.props.loggedInUser ? \"Add a comment...\" : \"You must be logged in to comment\",\n        value: this.state.body,\n        onChange: this.handleBodyChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"post_button\",\n        disabled: !this.props.loggedInUser ? true : false,\n        onClick: this.props.loggedInUser ? this.handlePost : this.notice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Post Comment\"));\n    }\n  }]);\n\n  return CommentAdd;\n}(Component);\n\nexport { CommentAdd as default };\nCommentAdd.propTypes = {\n  loggedInUser: PropTypes.object.isRequired,\n  article_id: PropTypes.string.isRequired,\n  handleAddComment: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/turiya/Google Drive/Coding/Northcoders 12-Week Course/nc-news/nc-news-frontend/src/components/CommentAdd.jsx"],"names":["React","Component","PropTypes","api","CommentAdd","state","body","handleBodyChange","event","target","value","setState","handlePost","article_id","props","created_by","loggedInUser","_id","addComment","then","newComment","handleAddComment","notice","propTypes","object","isRequired","string","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;;IAEqBC,U;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE;AADF,K;;UAcRC,gB,GAAmB,UAACC,KAAD,EAAW;AAC1B,UAAMF,IAAI,GAAGE,KAAK,CAACC,MAAN,CAAaC,KAA1B;AACA,aAAO,MAAKC,QAAL,CAAc;AACjBL,QAAAA,IAAI,EAAJA;AADiB,OAAd,CAAP;AAGH,K;;UAEDM,U,GAAa,YAAM;AAAA,UACPC,UADO,GACQ,MAAKC,KADb,CACPD,UADO;AAAA,UAEPP,IAFO,GAEE,MAAKD,KAFP,CAEPC,IAFO;AAGf,UAAMS,UAAU,GAAG,MAAKD,KAAL,CAAWE,YAAX,CAAwBC,GAA3C;AACAd,MAAAA,GAAG,CAACe,UAAJ,CAAeL,UAAf,EAA2BP,IAA3B,EAAiCS,UAAjC,EACKI,IADL,CACU,UAACC,UAAD,EAAgB;AAClB,eAAO,MAAKN,KAAL,CAAWO,gBAAX,CAA4BD,UAA5B,CAAP;AACH,OAHL;;AAIA,YAAKT,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAE;AADI,OAAd;AAGH,K;;;;;;;6BA7BQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAU,QAAA,SAAS,EAAC,oBAApB;AAAyC,QAAA,WAAW,EAAE,KAAKQ,KAAL,CAAWE,YAAX,GAA0B,kBAA1B,GAA+C,kCAArG;AAAyI,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,IAA3J;AAAiK,QAAA,QAAQ,EAAE,KAAKC,gBAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,QAAQ,EAAE,CAAC,KAAKO,KAAL,CAAWE,YAAZ,GAA2B,IAA3B,GAAkC,KAA5E;AAAmF,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,YAAX,GAA0B,KAAKJ,UAA/B,GAA4C,KAAKU,MAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CADJ;AAQH;;;;EAbmCrB,S;;SAAnBG,U;AAoCrBA,UAAU,CAACmB,SAAX,GAAuB;AACnBP,EAAAA,YAAY,EAAEd,SAAS,CAACsB,MAAV,CAAiBC,UADZ;AAEnBZ,EAAAA,UAAU,EAAEX,SAAS,CAACwB,MAAV,CAAiBD,UAFV;AAGnBJ,EAAAA,gBAAgB,EAAEnB,SAAS,CAACyB,IAAV,CAAeF;AAHd,CAAvB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../api'\n\nexport default class CommentAdd extends Component {\n    state = {\n        body: '',\n    }\n    render() {\n        return (\n            <div className=\"comment_add_container\">\n                <form className=\"comment_add_form\">\n                    <textarea className=\"comment_body_input\" placeholder={this.props.loggedInUser ? \"Add a comment...\" : \"You must be logged in to comment\"} value={this.state.body} onChange={this.handleBodyChange} />\n                </form>\n                <button className=\"post_button\" disabled={!this.props.loggedInUser ? true : false} onClick={this.props.loggedInUser ? this.handlePost : this.notice}>Post Comment</button>\n            </div>\n        );\n    }\n\n    handleBodyChange = (event) => {\n        const body = event.target.value;\n        return this.setState({\n            body\n        })\n    }\n\n    handlePost = () => {\n        const { article_id } = this.props;\n        const { body } = this.state;\n        const created_by = this.props.loggedInUser._id;\n        api.addComment(article_id, body, created_by)\n            .then((newComment) => {\n                return this.props.handleAddComment(newComment)\n            })\n        this.setState({\n            body: ''\n        })\n    }\n}\n\nCommentAdd.propTypes = {\n    loggedInUser: PropTypes.object.isRequired,\n    article_id: PropTypes.string.isRequired,\n    handleAddComment: PropTypes.func.isRequired\n};"]},"metadata":{},"sourceType":"module"}