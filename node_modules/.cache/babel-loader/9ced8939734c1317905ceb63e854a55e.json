{"ast":null,"code":"import _slicedToArray from \"/home/turiya/Drive/Coding/Northcoders 12-Week Course/nc-news/nc-news-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar axios = require('axios');\n\nvar API_URL = 'https://nc-news-api-tps.herokuapp.com/api';\n\nvar fetchArticles = function fetchArticles(topic) {\n  if (topic === undefined) {\n    return axios.get(\"\".concat(API_URL, \"/articles\")).then(function (_ref) {\n      var data = _ref.data;\n      return data.articles.sort(function (a, b) {\n        return a.votes - b.votes;\n      });\n    }).catch(console.log);\n  } else {\n    return axios.get(\"\".concat(API_URL, \"/topics/\").concat(topic, \"/articles\")).then(function (_ref2) {\n      var data = _ref2.data;\n      return data.articles.sort(function (a, b) {\n        return a.votes - b.votes;\n      });\n    }).catch(console.log);\n  }\n};\n\nvar fetchSingleArticleAndComments = function fetchSingleArticleAndComments(article_id) {\n  return Promise.all([fetchArticle(article_id), fetchComments(article_id)]).then(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        article = _ref4[0],\n        comments = _ref4[1];\n\n    comments.sort(function (a, b) {\n      return a.created_at - b.created_at;\n    });\n    return [article, comments];\n  }).catch(function (err) {\n    console.log(err, 'fetchSingleArticleAndComments error');\n    return err;\n  });\n};\n\nvar voteArticle = function voteArticle(vote, article_id) {\n  return axios.patch(\"\".concat(API_URL, \"/articles/\").concat(article_id, \"?vote=\").concat(vote)).then(function (_ref5) {\n    var data = _ref5.data;\n    return data;\n  }).catch(console.log);\n};\n\nvar voteComment = function voteComment(vote, comment_id) {\n  return axios.patch(\"\".concat(API_URL, \"/comments/\").concat(comment_id, \"?vote=\").concat(vote)).then(function (_ref6) {\n    var data = _ref6.data;\n    return data.comment;\n  }).catch(console.log);\n};\n\nvar fetchArticle = function fetchArticle(article_id) {\n  return axios.get(\"\".concat(API_URL, \"/articles/\").concat(article_id)).then(function (_ref7) {\n    var data = _ref7.data;\n    return data.article;\n  }).catch(function (err) {\n    console.log(err, 'fetchArticle error');\n  });\n};\n\nvar fetchComments = function fetchComments(article_id) {\n  return axios.get(\"\".concat(API_URL, \"/articles/\").concat(article_id, \"/comments\")).then(function (_ref8) {\n    var data = _ref8.data;\n    return data.comments;\n  });\n};\n\nvar fetchUsers = function fetchUsers() {\n  return axios.get(\"\".concat(API_URL, \"/users\")).then(function (_ref9) {\n    var data = _ref9.data;\n    return data.users;\n  });\n};\n\nvar addArticle = function addArticle(title, body, created_by, topic) {\n  var newPost = {\n    title: title,\n    body: body,\n    created_by: created_by\n  };\n  return axios.post(\"\".concat(API_URL, \"/topics/\").concat(topic, \"/articles\"), newPost).then(function (response) {\n    return response;\n  }).catch(console.log);\n};\n\nvar addComment = function addComment(article_id, body, created_by) {\n  var newComment = {\n    body: body,\n    created_by: created_by\n  };\n  return axios.post(\"\".concat(API_URL, \"/articles/\").concat(article_id, \"/comments\"), newComment).then(function (_ref10) {\n    var data = _ref10.data;\n    return data.new_comment;\n  }).catch(console.log);\n};\n\nvar deleteComment = function deleteComment(comment_id) {\n  return axios.delete(\"\".concat(API_URL, \"/comments/\").concat(comment_id)).then(function (_ref11) {\n    var data = _ref11.data;\n    console.log(data);\n  }).catch(console.log);\n};\n\nvar deleteArticle = function deleteArticle(article_id) {\n  return axios.delete(\"\".concat(API_URL, \"/articles/\").concat(article_id)).then(function (_ref12) {\n    var data = _ref12.data,\n        status = _ref12.status;\n    return [data, status];\n  }).catch(console.log);\n};\n\nexport { fetchSingleArticleAndComments, fetchArticles, fetchUsers, voteArticle, voteComment, addArticle, deleteArticle, addComment, deleteComment };","map":{"version":3,"sources":["/home/turiya/Drive/Coding/Northcoders 12-Week Course/nc-news/nc-news-frontend/src/api.js"],"names":["axios","require","API_URL","fetchArticles","topic","undefined","get","then","data","articles","sort","a","b","votes","catch","console","log","fetchSingleArticleAndComments","article_id","Promise","all","fetchArticle","fetchComments","article","comments","created_at","err","voteArticle","vote","patch","voteComment","comment_id","comment","fetchUsers","users","addArticle","title","body","created_by","newPost","post","response","addComment","newComment","new_comment","deleteComment","delete","deleteArticle","status"],"mappings":"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","sourcesContent":["const axios = require('axios');\nconst API_URL = 'https://nc-news-api-tps.herokuapp.com/api'\n\nconst fetchArticles = (topic) => {\n    if (topic === undefined) {\n        return axios.get(`${API_URL}/articles`)\n            .then(({ data }) => {\n                return data.articles.sort((a, b) => { return a.votes - b.votes });\n            })\n            .catch(console.log)\n    } else {\n        return axios.get(`${API_URL}/topics/${topic}/articles`)\n            .then(({ data }) => {\n                return data.articles.sort((a, b) => { return a.votes - b.votes })\n            })\n            .catch(console.log)\n    }\n}\n\nconst fetchSingleArticleAndComments = (article_id) => {\n    return Promise.all([fetchArticle(article_id), fetchComments(article_id)])\n        .then(([article, comments]) => {\n            comments.sort((a, b) => { return a.created_at - b.created_at })\n            return [article, comments];\n        })\n        .catch((err) => {\n            console.log(err, 'fetchSingleArticleAndComments error')\n            return err\n        })\n}\n\nconst voteArticle = (vote, article_id) => {\n    return axios.patch(`${API_URL}/articles/${article_id}?vote=${vote}`)\n        .then(({ data }) => {\n            return data;\n        })\n        .catch(console.log)\n}\n\nconst voteComment = (vote, comment_id) => {\n    return axios.patch(`${API_URL}/comments/${comment_id}?vote=${vote}`)\n        .then(({ data }) => {\n            return data.comment;\n        })\n        .catch(console.log)\n}\n\nconst fetchArticle = (article_id) => {\n    return axios.get(`${API_URL}/articles/${article_id}`)\n        .then(({ data }) => {\n            return data.article;\n        })\n        .catch((err) => {\n            console.log(err, 'fetchArticle error')\n        })\n}\n\nconst fetchComments = (article_id) => {\n    return axios.get(`${API_URL}/articles/${article_id}/comments`)\n        .then(({ data }) => {\n            return data.comments;\n        })\n}\n\nconst fetchUsers = () => {\n    return axios.get(`${API_URL}/users`)\n        .then(({ data }) => {\n            return data.users;\n        })\n}\n\nconst addArticle = (title, body, created_by, topic) => {\n    const newPost = {\n        title, body, created_by\n    };\n    return axios.post(`${API_URL}/topics/${topic}/articles`, newPost)\n        .then((response) => {\n            return response;\n        })\n        .catch(console.log)\n}\n\nconst addComment = (article_id, body, created_by) => {\n    const newComment = {\n        body, created_by\n    };\n    return axios.post(`${API_URL}/articles/${article_id}/comments`, newComment)\n        .then(({ data }) => {\n            return data.new_comment;\n        })\n        .catch(console.log)\n}\n\nconst deleteComment = (comment_id) => {\n    return axios.delete(`${API_URL}/comments/${comment_id}`)\n        .then(({ data }) => {\n            console.log(data);\n        })\n        .catch(console.log)\n}\n\nconst deleteArticle = (article_id) => {\n    return axios.delete(`${API_URL}/articles/${article_id}`)\n        .then(({ data, status }) => {\n            return [data, status];\n        })\n        .catch(console.log)\n}\n\nexport {\n    fetchSingleArticleAndComments, fetchArticles, fetchUsers, voteArticle, voteComment, addArticle, deleteArticle, addComment, deleteComment\n}"]},"metadata":{},"sourceType":"module"}